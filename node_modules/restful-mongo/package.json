{
  "name": "restful-mongo",
  "version": "0.1.8",
  "description": "Add easily RESTful API to use with Mongo",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bitliner/restful-mongo"
  },
  "dependencies": {
    "mongodb": ">= 0.9.2",
    "deferred": "~0.6.4"
  },
  "keywords": [
    "mongo",
    "mongodb",
    "api",
    "rest",
    "restful",
    "crud"
  ],
  "author": {
    "name": "bitliner"
  },
  "license": "BSD",
  "readme": "# RESTful MongoDB\n\nIt allows to add easily and quickly RESTful API to your nodejs app, to be used with MongoDB.\n\nIt is based on https://github.com/tdegrunt/mongodb-rest.\n\n## Install and setting\n\n* install library `npm install restful-mongo`\n* create a config file in the root of your project, whose content is like this:\n\n```\n\nmodule.exports = {\n\tdb: {\n\t\tusername: '',\n\t\tpassword:'',\n\t\thost: 'localhost',\n\t\tport: 27017\n\t},\n\t\"flavor\": \"nounderscore\",\n\t\"debug\": true\n}\n\n```\n\n* add routers to your app in app.js files\n\n```\nvar app = express();\n,\tconfig=require('./config.js')\n,\trestfulMongo=require('../../index.js');\n\nrestfulMongo.configure(app, config );\n\n```\n\nInstallation and configuration is completed.\n\n\n## Documentation\n\n### GET method\n\nTo get all resources contained in a collection, use the following url:\n\n* `/api/database_name/collection_name`\n\nTo get a single resource, append _id value to the prevouos url, like the following:\n\n* `/api/database_name/collection_name/_id`\n\nGET method supports the following parameters:\n\n* sort: to sort the results, for example `?sort=-_id,name` sort the results by _id field, in descending order, and then by name, in ascending order\n* fields: to apply projection to the results, for example `?fields=name,_id` returns an array of objects with only 2 fields: name and _id\n* query: to query specific objects, you can specify condition on evenry single object dirrectly as parameters, separated by comma. For example `?name=giovanni,age=18` returns only objects that has 'giovanni' as name and '18' as age. You can specify more complex query too. See below documentation about comples query\n\n### POST method\n### PUT method\n### DELETE method\n",
  "readmeFilename": "README.md",
  "_id": "restful-mongo@0.1.8",
  "_from": "restful-mongo@"
}
